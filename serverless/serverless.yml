
service: realworld-python-lambda-ddb

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  region: ap-northeast-2
  environment:
    DYNAMODB_NAMESPACE: ${opt:stage, "dev"}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"
      
  layers:
    - { "Ref": "CommonPackagesLambdaLayer" }

layers:
  commonPackages:
    path: commonPackages
    name: ${opt:stage, "dev"}-commonPackages
    compatibleRuntimes:
      - python3.9
    compatibleArchitectures:
      - x86_64


functions:
  # Users API
  create_user:
    handler: src/user.create_user
    events:
      - http:
          path: /api/users
          method: post
          cors: true
  login_user:
    handler: src/user.login_user
    events:
      - http:
          path: /api/users/login
          method: POST
          cors: true
  get_user:
    handler: src/user.get_user
    events:
      - http:
          path: /api/user
          method: GET
          cors: true
  update_user:
    handler: src/user.update_user
    events:
      - http:
          path: /api/user
          method: PUT
          cors: true
  get_profile:
    handler: src/user.get_profile
    events:
      - http:
          method: GET
          path: /api/profiles/{username}
          cors: true
  follow_user:
    handler: src/user.follow
    events:
      - http:
          method: POST
          path: /api/profiles/{username}/follow
          cors: true

  unfollow_user:
    handler: src/user.follow
    events:
      - http:
          method: DELETE
          path: /api/profiles/{username}/follow
          cors: true          
  
  # Articles API
  createArticle:
    handler: src/article.create_article
    events:
      - http:
          method: POST
          path: /api/articles
          cors: true

  getArticle:
    handler: src/article.get_article
    events:
      - http:
          method: GET
          path: /api/articles/{slug}
          cors: true

  updateArticle:
    handler: src/article.update_article
    events:
      - http:
          method: PUT
          path: /api/articles/{slug}
          cors: true

  deleteArticle:
    handler: src/article.delete_article
    events:
      - http:
          method: DELETE
          path: /api/articles/{slug}
          cors: true

  favoriteArticle:
    handler: src/article.favorite_article
    events:
      - http:
          method: POST
          path: /api/articles/{slug}/favorite
          cors: true

  unfavoriteArticle:
    handler: src/article.favorite_article
    events:
      - http:
          method: DELETE
          path: /api/articles/{slug}/favorite
          cors: true

  listArticles:
    handler: src/article.list_articles
    events:
      - http:
          method: GET
          path: /api/articles
          cors: true

  getArticlesFeed:
    handler: src/article.get_feed
    events:
      - http:
          method: GET
          path: /api/articles/feed
          cors: true

  getTags:
    handler: src/article.get_tags
    events:
      - http:
          method: GET
          path: /api/tags
          cors: true

  ## Comments API
  createComment:
    handler: src/comment.create
    events:
      - http:
          method: POST
          path: /api/articles/{slug}/comments
          cors: true

  getComments:
    handler: src/comment.get
    events:
      - http:
          method: GET
          path: /api/articles/{slug}/comments
          cors: true

  deleteComment:
    handler: src/comment.delete
    events:
      - http:
          method: DELETE
          path: /api/articles/{slug}/comments/{id}
          cors: true

resources:
  Resources:
    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: username
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          -
            AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.DYNAMODB_NAMESPACE}-users
        GlobalSecondaryIndexes:
          - IndexName: email
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 10
              WriteCapacityUnits: 5
    
    ArticlesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: slug
            AttributeType: S
          -
            AttributeName: author
            AttributeType: S
          -
            AttributeName: createdAt
            AttributeType: N
          - 
            AttributeName: dummy
            AttributeType: S
        KeySchema:
          -
            AttributeName: slug
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_NAMESPACE}-articles
        GlobalSecondaryIndexes:
          -
            IndexName: createdAt
            KeySchema:
              -
                AttributeName: dummy
                KeyType: HASH
              -
                AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          -
            IndexName: author
            KeySchema:
              - AttributeName: author
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
              

    CommentsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: slug
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_NAMESPACE}-comments
        GlobalSecondaryIndexes:
          -
            IndexName: article
            KeySchema:
              -
                AttributeName: slug
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

package:
  exclude:
    - test/**
    - commonPackages/**